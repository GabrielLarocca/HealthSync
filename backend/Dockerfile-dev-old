# syntax = docker/dockerfile:1

# Use the base image with specified Ruby version
ARG RUBY_VERSION=3.2.3
FROM registry.docker.com/library/ruby:$RUBY_VERSION-slim as base

# Rails app directory
WORKDIR /usr/src/app

# Set environment variables for development
ENV RAILS_ENV="development" \
    BUNDLE_DEPLOYMENT="0" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="production"

# Install necessary dependencies
RUN apt-get update -qq && \
    apt-get install default-libmysqlclient-dev -y && \
    apt-get install --no-install-recommends -y build-essential git libvips pkg-config 

# Install application gems
COPY Gemfile Gemfile.lock ./
RUN bundle install

# Copy application code
COPY . .

# Final stage for development
FROM base

# Install additional packages for development
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y curl libsqlite3-0 libvips && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Copy built artifacts: gems, application
COPY --from=base /usr/local/bundle /usr/local/bundle
COPY --from=base /rails /rails

# Set up the runtime files as a non-root user for security
RUN useradd rails --create-home --shell /bin/bash && \
    chown -R rails:rails db log storage tmp

# Switch to the non-root user
USER rails:rails

# Entrypoint prepares the database.
ENTRYPOINT ["/rails/bin/docker-entrypoint"]

# Expose the default Rails port
EXPOSE 3000

# Start the server by default, this can be overwritten at runtime
CMD ["./bin/rails", "server"]
